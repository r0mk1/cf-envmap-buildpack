#!/usr/bin/env ruby

# Copyright 2023 Roman Kindruk

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


require 'json'
require 'yaml'
require 'fileutils'

BUILD_DIR = ARGV[0]
MAPPINGS = File.join(BUILD_DIR, "cfenvmap.yml")

STDOUT.sync = true
puts "-----> CF EnvMap Buildpack"

user_config = File.file?(MAPPINGS) ? YAML.safe_load_file(MAPPINGS) : {}
vcap = JSON.parse(ENV["VCAP_SERVICES"] || "{}")

def construct_env(user_config, vcap)
  env = {}

  user_config.each do |name, mapping|
    unless mapping.key? "env"
      STDERR.puts %Q(Can't find the "env" key under the "#{name}")
      next
    end

    unless vcap.key? name
      STDERR.puts %Q(Can't find a binding for the "#{name}")
      next
    end

    svc = vcap[name][0]       # Take a first binding

    mapping["env"].each do |envar, key|
      val = svc.dig(*key.split("."))
      if val.nil?
        STDERR.puts %Q(Can't find "#{key}" in the binding "#{name}")
        next
      end
      env[envar] = val
    end
  end

  return env
end

def export(env, build_dir)
  dir = File.join(build_dir, ".profile.d")
  FileUtils.mkdir_p dir
  File.open(File.join(dir, "cfenvmap.sh"), 'w') do |file|
    env.each{ |k, v| file.write("export #{k}=#{v}\n") }
  end
end

envars = construct_env(user_config, vcap)
export(envars, BUILD_DIR)
